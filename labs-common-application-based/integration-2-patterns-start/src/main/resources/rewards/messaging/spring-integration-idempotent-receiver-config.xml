<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ /*
  ~  * Copyright 2002-2011 the original author or authors, or Red-Black IT Ltd, as appropriate.
  ~  *
  ~  * Licensed under the Apache License, Version 2.0 (the "License");
  ~  * you may not use this file except in compliance with the License.
  ~  * You may obtain a copy of the License at
  ~  *
  ~  *      http://www.apache.org/licenses/LICENSE-2.0
  ~  *
  ~  * Unless required by applicable law or agreed to in writing, software
  ~  * distributed under the License is distributed on an "AS IS" BASIS,
  ~  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  * See the License for the specific language governing permissions and
  ~  * limitations under the License.
  ~  */
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/integration
                           http://www.springframework.org/schema/integration/spring-integration.xsd">

    <!-- TODO-09 Change this to a QueueChannel -->
    <int:channel id="dinings">
        <int:queue/>
    </int:channel>

    <!-- TODO-04 wrap this service-activator in a chain -->
    <!-- TODO-05 add a preceding service activator referencing alreadyRewardedConfirmer -->
    <!-- TODO-07 add a preceding filter for Dinings with null fields -->
    <!-- TODO-08 set the throw-exception-on-rejection attribute of the filter to true -->
    <int:chain input-channel="dinings" output-channel="confirmations">
        <int:filter
                expression="payload.amount != null and payload.creditCardNumber != null and payload.merchantNumber != null and payload.date != null"
                throw-exception-on-rejection="true"/>
        <int:service-activator ref="alreadyRewardedConfirmer"/>
        <int:service-activator ref="rewardNetwork" method="rewardAccountFor"/>
    </int:chain>

    <int:service-activator id="rewardNetworkActivator" ref="rewardNetwork" method="rewardAccountFor"
                           input-channel="dinings" output-channel="confirmations"/>

    <bean id="alreadyRewardedConfirmer" class="rewards.messaging.AlreadyRewardedConfirmer">
        <constructor-arg ref="rewardRepository"/>
        <constructor-arg ref="confirmationProcessor"/>
    </bean>

    <int:gateway service-interface="rewards.ConfirmationProcessor"
                 id="confirmationProcessor" default-request-channel="confirmations"/>

    <int:channel id="confirmations">
        <int:queue capacity="10"/>
    </int:channel>

    <int:logging-channel-adapter channel="errorChannel"
                                 expression="'filter rejected message with ' + payload.failedMessage.payload"
                                 level="WARN"/>
</beans>
